amcl:
  ros__parameters:
    alpha1: 0.8  # Expected noise in odometry rotation estimate from rotation
    alpha2: 0.4  # Expected noise in odometry rotation estimate from translation
    alpha3: 0.2  # Expected noise in odometry translation estimate from translation
    alpha4: 0.3  # Expected noise in odometry translation estimate from rotation
    alpha5: 0.2
    base_frame_id: "base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false # related to laser_model_type for prob. est
    global_frame_id: "map"
    lambda_short: 0.1 # exponential decay rate of z_short
    laser_likelihood_max_dist: 2.0
    laser_max_range: 10.0  # set to -1.0 to match internal limits
    laser_min_range: 0.1   # set to -1.0 to match internal limits
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 3000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2 # affects gaussian fitment of z_hit
    tf_broadcast: true
    transform_tolerance: 0.3
    update_min_a: -1.0   # Minimum angle delta in radians for AMCL to recalculate, (-) matches scan freq
    update_min_d: -1.0  # Minimim distance delta in m for AMCL to recalculate, (-) matches scan freq
    z_hit: 0.6     # Likelyhood that a lidar beam hits a known obstacle from the map
    z_max: 0.05    # Likelyhood that a lidar beam goes beyond maximum range
    z_rand: 0.3    # Likelyhood that a lidar beam hits an obstacle not known in the map
    z_short: 0.05  # Likelyhood that a lidar beam falls short without hitting an obstacle
    scan_topic: scan

bt_navigator:
  ros__parameters:
    global_frame: map
    robot_base_frame: base_link
    odom_topic: odom
    navigators: ["navigate_to_pose"]
    default_nav_to_pose_bt_xml: "/home/ubuntu/cda_ws/src/cda1tenth-bringup/behavior_trees/navigate_through_route_to_pose.xml"
    navigate_to_pose:
      plugin: "nav2_bt_navigator/NavigateToPoseNavigator"
    plugin_lib_names:
      - nav2_route_server_compute_route_action_bt_node
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: True
      width: 2
      height: 2
      resolution: 0.04
      footprint: "[ [-0.135, 0.10], [-0.135, -0.10], [0.525, -0.10], [0.525, 0.10] ]"
      always_send_full_costmap: True
      origin_x: -1.0
      origin_y: -1.0
      plugins: ["obstacle_layer", "inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan

        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 1.0
        inflation_radius: 0.4

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      footprint: "[ [-0.135, 0.10], [-0.135, -0.10], [0.525, -0.10], [0.525, 0.10] ]"
      resolution: 0.04
      track_unknown_space: true
      always_send_full_costmap: True
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        observation_sources: scan

        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 1.0
        inflation_radius: 0.4

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    planner_plugins: ["GridBased"]

    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"
      tolerance: 0.5
      allow_unknown: false

controller_server:
  ros__parameters:
    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"

    general_goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.5
      yaw_goal_tolerance: 0.75

    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 1.0
      use_collision_detection: false # Set to off due to poor collision estimate behavior
      use_rotate_to_heading: false
      inflation_cost_scaling_factor: 1.0


waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

route_server:
  ros__parameters:
    graph_filepath: "/home/ubuntu/cda_ws/src/cda1tenth-bringup/graphs/pvl_graph.geojson"
    boundary_radius_to_achieve_node: 1.0
    radius_to_achieve_node: 2.0
    edge_cost_functions: ["DistanceScorer", "CostmapScorer"]
    operations: ["AdjustSpeedLimit", "ReroutingService", "CollisionMonitor"]

    ReroutingService:
      plugin: "nav2_route::ReroutingService"

    AdjustSpeedLimit:
      plugin: "nav2_route::AdjustSpeedLimit"

    CollisionMonitor:
      plugin: "nav2_route::CollisionMonitor"
      max_collision_dist: 1.0

    DistanceScorer:
      plugin: "nav2_route::DistanceScorer"

    CostmapScorer:
      plugin: "nav2_route::CostmapScorer"

scan_to_scan_filter_chain:
  ros__parameters:
    filter1:
      name: footprint_filter
      type: laser_filters/LaserScanFootprintFilter
      params:
        inscribed_radius: 1.0

vesc_to_odom_node:
  ros__parameters:
    odom_frame: odom
    base_frame: base_link
    speed_to_erpm_gain: 7317.8
    speed_to_erpm_offset: 0.0
    use_servo_cmd_to_calc_angular_velocity: True
    steering_angle_to_servo_gain: 0.94
    steering_angle_to_servo_offset: 0.425
    wheelbase: 0.43
    publish_tf: True

ackermann_to_vesc_node:
  ros__parameters:
    speed_to_erpm_gain: 7317.8
    speed_to_erpm_offset: 0.0
    steering_angle_to_servo_gain: -0.55
    steering_angle_to_servo_offset: 0.425
    Kp: 0.8
    Ki: 0.15
    Kd: 0.0

vesc_driver_node:
  ros__parameters:
    port: "/dev/ttyACM0"
    brake_max: 200000.0
    brake_min: -20000.0
    current_max: 100.0
    current_min: 0.0
    duty_cycle_max: 0.0
    duty_cycle_min: 0.0
    position_max: 0.0
    position_min: 0.0
    servo_max: 0.85
    servo_min: 0.00
    speed_max: 23250.0
    speed_min: -23250.0
